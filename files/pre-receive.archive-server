#!/bin/bash -el

# This script uses the archive-server (https://github.com/tsuru/archive-server)
# to generate archives and deploy applications using them.
#
# It depends on the following environment variables:
#
#   - ARCHIVE_SERVER_READ: the base URL that will be sent to the tsuru server,
#                          is a public URL that will be used to serve the
#                          archive (for example: http://archive-server:8080)
#   - ARCHIVE_SERVER_WRITE: the base URL that will be used to generate the
#                           archive, it's commonly a private URL (for example:
#                           http://127.0.0.1:8181)
#   - TSURU_HOST: URL to the Tsuru API (for example: http://yourtsuru:8080)
#   - TSURU_TOKEN: the token to communicate with the API (generated with `tsr
#                  token`, in the server).

while read oldrev newrev refname
do
        set +e
        echo $refname | grep -q /master$
        status=$?
        set -e
        if [ $status = 0 ]
        then
                COMMIT=${newrev}
        fi
done

if [ -z ${COMMIT} ]
then
	echo "ERROR: please push to master"
	exit 3
fi

generate_archive() {
	url="${ARCHIVE_SERVER_WRITE}/"
	result=`curl -sNd "path=${1}&refid=${2}" $url`
	python <<END
import json
print json.loads(u"""${result}""")["id"]
END
}

wait_archive() {
        url="${1}&keep=1"
        content_type=`curl -sI $url | grep Content-Type | awk '{print $2}'`
        while echo $content_type | grep -v application/x-gzip
        do
                sleep 1
                content_type=`curl -sI $url | grep Content-Type | awk '{print $2}'`
        done
}

APP_DIR=${PWD##*/}
APP_NAME=${APP_DIR/.git/}
archive_id=`generate_archive $PWD $COMMIT`
archive_url="${ARCHIVE_SERVER_READ}/?id=$archive_id"
wait_archive $archive_url
url="${TSURU_HOST}/apps/${APP_NAME}/repository/clone"
curl -H "Authorization: bearer ${TSURU_TOKEN}" -d "archive-url=${archive_url}&commit=${COMMIT}&user=${TSURU_USER}" -s -N $url | tee /tmp/deploy-${APP_NAME}.log
tail -1 /tmp/deploy-${APP_NAME}.log | grep -q "^OK$"
